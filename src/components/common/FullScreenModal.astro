---
import { Icon } from 'astro-icon';

interface Props {
    target: string,
    title: string,
    closeType?: 'times' | 'back',
    buttons?: boolean,
    throwDown?: boolean,
}

const { target, title, closeType = 'back', buttons = true, throwDown = false } = Astro.props;

const closeIcon = {
    times: 'fa-solid:times',
    back: 'fa-solid:chevron-left'
}[closeType]; 
---

<div
    class={`transform has-[[data-modal-trigger]:checked]:translate-y-0 translate-y-full transition-all z-50 w-screen h-screen absolute flex justify-center items-center`}
>
    <div class={`sm:max-w-[500px] sm:max-h-[500px] absolute z-[1] w-full ${ throwDown ? 'h-auto rounded-t-md' : 'max-sm:h-full' } sm:h-auto bg-white p-5 flex flex-col justify-between gap-10 max-sm:self-end sm:rounded-md`}>
        <div class="flex flex-col gap-5 overflow-y-auto mobile-scrollbar">
            <div class={`z-[1] sticky top-0 pb-3 bg-white flex items-center gap-10 text-gray-400 ${ closeType != 'back' ? 'flex-row-reverse justify-between' : 'justify-start'}`}>
                <label for={target} class='text-xl'>
                    <Icon name={closeIcon} class="w-5 h-5"/>
                </label>
                <span class='font-bold text-xl text-gray-800'>
                    { title }
                </span>
            </div>
            <input data-modal-trigger={target} id={target} type="checkbox" class="hidden"/>
            <slot />
        </div>
        {
            buttons && (
                <div class="flex gap-5">
                    <label for={target} class='cursor-pointer bg-gray-100 text-gray-400 py-1 rounded-lg text-lg text-center flex-grow'>Cancelar</label>
                    <label for={target} class='cursor-pointer bg-amber-100 text-amber-400 py-1 rounded-lg text-lg text-center flex-grow'>Confirmar</label>
                </div>
            )
        }
    </div>
    <label for={target} class="absolute -z-10 w-full h-full bg-[rgba(0,0,0,.3)]"></label>
</div>